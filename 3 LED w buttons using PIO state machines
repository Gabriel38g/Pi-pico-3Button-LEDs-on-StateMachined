# lesson 94 + 103 control for Paul McWhorter's Pi pico W class on YouTube 
# 3 butns using only State Machines
# Homework: Led on but0, but1, but2
# working independently of each other

import rp2
from time import sleep
from machine import Pin

@rp2.asm_pio(out_init=(rp2.PIO.OUT_LOW, )*4,  out_shiftdir=rp2.PIO.SHIFT_RIGHT)

def button_irq():
    wrap_target()
    label('read again')
    mov(isr, null)
    in_(pins,3) [31]  #-- Reads three bits/pins instead of 2!
    nop() [31]
    nop() [31]
    nop() [31]
    mov(x, isr) [31]   #<--- reads butn0 as 0001, butn1 as 0010 butn2 as 0100 
    jmp(not_x, 'read again') [31]
    jmp(x_not_y, 'passled0') [31]
    irq(block,0)
    set(y,  0b0010) [31]
    label('passled0') 
    set(y, 0b0010) [31]
    jmp(x_not_y, 'passled1')
    irq(block, 1)
    label('passled1')
    set(y, 0b0100)
    jmp(x_not_y, 'passled2')
    irq(block,2)
    label('passled2')
    set(y, 0b0001)
    wrap()

@rp2.asm_pio(out_init=rp2.PIO.OUT_LOW)
def led_control0():
    set(x, 0b0)
    wrap_target()
    wait(1, irq, 0)
    mov(x, invert(x))
    mov(pins,  x)
    irq(clear, 0)
    wrap()

@rp2.asm_pio(out_init=rp2.PIO.OUT_LOW)
def led_control1():
    set(x, 0b0)
    wrap_target()
    wait(1, irq, 1)
    mov(x, invert(x))
    mov(pins,  x)
    irq(clear, 0)
    wrap()

@rp2.asm_pio(out_init=rp2.PIO.OUT_LOW)
def led_control2():
    set(x, 0b0)
    wrap_target()
    wait(1, irq, 2)
    mov(x, invert(x))
    mov(pins,  x)
    irq(clear, 0)
    wrap()


pin11=Pin(11, Pin.IN, Pin.PULL_DOWN)
sm0= rp2.StateMachine(0, button_irq, in_base=pin11, freq=2000)

led_pin0 = Pin(18,  Pin.OUT)
sm_led0=rp2.StateMachine(1, led_control0,  freq=2000,  out_base=led_pin0)

led_pin1= Pin(19,  Pin.OUT)
sm_led1=rp2.StateMachine(2, led_control1,  freq=2000,  out_base=led_pin1)

led_pin2= Pin(20,  Pin.OUT)
sm_led2=rp2.StateMachine(3, led_control2, freq=2000,  out_base=led_pin2)

sm0.active(1)
sm_led0.active(1)
sm_led1.active(1)
sm_led2.active(1)
